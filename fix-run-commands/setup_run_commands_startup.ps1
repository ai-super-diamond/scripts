# ============================================================================
# Win+R Commands - Startup Helper
# ============================================================================
# This script helps you set up automatic Win+R command population at login
# Run this once to configure, then your commands will be available after every login
# ============================================================================

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "Win+R Commands - Startup Setup" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

$ScriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
$PopulateScript = Join-Path $ScriptDir "populate_run_commands_from_file.ps1"
$StartupFolder = [Environment]::GetFolderPath("Startup")

Write-Host "This will set up automatic Win+R command population at login." -ForegroundColor Yellow
Write-Host ""
Write-Host "Script location: $PopulateScript" -ForegroundColor White
Write-Host "Startup folder: $StartupFolder" -ForegroundColor White
Write-Host ""

$choice = Read-Host "Do you want to set up automatic startup? (Y/N)"

if ($choice -match '^[Yy]') {
    try {
        # Create a batch file in startup folder that runs our PowerShell script
        $startupBat = Join-Path $StartupFolder "populate_run_commands.bat"
        
        $batContent = @"
@echo off
REM Auto-populate Win+R commands at startup
REM Generated by Win+R Commands Startup Helper

REM Run silently in background
powershell -WindowStyle Hidden -ExecutionPolicy Bypass -File "$PopulateScript" >nul 2>&1

REM Optional: Show notification (uncomment next line if you want to see when it runs)
REM echo Win+R commands populated! > "%TEMP%\run_commands_startup.log"
"@

        $batContent | Out-File -FilePath $startupBat -Encoding ASCII -Force
        
        Write-Host ""
        Write-Host "‚úÖ SUCCESS! Startup configured!" -ForegroundColor Green
        Write-Host ""
        Write-Host "Created: $startupBat" -ForegroundColor Green
        Write-Host ""
        Write-Host "Your Win+R commands will now be automatically populated:" -ForegroundColor Yellow
        Write-Host "‚Ä¢ Every time you log in" -ForegroundColor White
        Write-Host "‚Ä¢ After Windows restarts" -ForegroundColor White
        Write-Host "‚Ä¢ Even after system cleaners run" -ForegroundColor White
        Write-Host ""
        Write-Host "üí° To modify commands: Edit run_commands.txt and they'll be" -ForegroundColor Cyan
        Write-Host "   automatically applied on next login!" -ForegroundColor Cyan
        
    } catch {
        Write-Host "‚ùå ERROR: Could not set up startup" -ForegroundColor Red
        Write-Host "Error: $($_.Exception.Message)" -ForegroundColor Red
        Write-Host ""
        Write-Host "Manual setup:" -ForegroundColor Yellow
        Write-Host "1. Copy populate_run_commands.bat to your Startup folder:" -ForegroundColor White
        Write-Host "   $StartupFolder" -ForegroundColor White
    }
    
} else {
    Write-Host ""
    Write-Host "Startup setup cancelled." -ForegroundColor Yellow
    Write-Host ""
    Write-Host "You can still run the scripts manually whenever needed:" -ForegroundColor White
    Write-Host "‚Ä¢ Double-click populate_run_commands.bat" -ForegroundColor White
    Write-Host "‚Ä¢ Or run the PowerShell scripts directly" -ForegroundColor White
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "Additional Options:" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "[R] Remove startup automation" -ForegroundColor Yellow
Write-Host "[T] Test run the command populator now" -ForegroundColor Yellow
Write-Host "[E] Edit run_commands.txt" -ForegroundColor Yellow
Write-Host "[Q] Quit" -ForegroundColor Yellow
Write-Host ""

$action = Read-Host "Choose an action (R/T/E/Q)"

switch ($action.ToUpper()) {
    'R' {
        $startupBat = Join-Path $StartupFolder "populate_run_commands.bat"
        if (Test-Path $startupBat) {
            Remove-Item $startupBat -Force
            Write-Host "‚úÖ Startup automation removed" -ForegroundColor Green
        } else {
            Write-Host "‚ÑπÔ∏è No startup automation was configured" -ForegroundColor Yellow
        }
    }
    'T' {
        Write-Host ""
        Write-Host "Running command populator..." -ForegroundColor Yellow
        & $PopulateScript
    }
    'E' {
        $configFile = Join-Path $ScriptDir "run_commands.txt"
        if (Test-Path $configFile) {
            Write-Host "Opening run_commands.txt..." -ForegroundColor Yellow
            Start-Process notepad $configFile
        } else {
            Write-Host "‚ùå run_commands.txt not found" -ForegroundColor Red
        }
    }
    'Q' {
        Write-Host "Goodbye!" -ForegroundColor Green
    }
    default {
        Write-Host "Invalid choice" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "Press any key to exit..." -ForegroundColor Cyan
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
